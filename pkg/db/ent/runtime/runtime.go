// Code generated by entc, DO NOT EDIT.

package runtime

import (
	"context"

	"github.com/NpoolPlatform/account-manager/pkg/db/ent/account"
	"github.com/NpoolPlatform/account-manager/pkg/db/ent/goodbenefit"
	"github.com/NpoolPlatform/account-manager/pkg/db/ent/schema"
	"github.com/google/uuid"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accountMixin := schema.Account{}.Mixin()
	account.Policy = privacy.NewPolicies(accountMixin[0], schema.Account{})
	account.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := account.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	accountMixinFields0 := accountMixin[0].Fields()
	_ = accountMixinFields0
	accountFields := schema.Account{}.Fields()
	_ = accountFields
	// accountDescCreatedAt is the schema descriptor for created_at field.
	accountDescCreatedAt := accountMixinFields0[0].Descriptor()
	// account.DefaultCreatedAt holds the default value on creation for the created_at field.
	account.DefaultCreatedAt = accountDescCreatedAt.Default.(func() uint32)
	// accountDescUpdatedAt is the schema descriptor for updated_at field.
	accountDescUpdatedAt := accountMixinFields0[1].Descriptor()
	// account.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	account.DefaultUpdatedAt = accountDescUpdatedAt.Default.(func() uint32)
	// account.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	account.UpdateDefaultUpdatedAt = accountDescUpdatedAt.UpdateDefault.(func() uint32)
	// accountDescDeletedAt is the schema descriptor for deleted_at field.
	accountDescDeletedAt := accountMixinFields0[2].Descriptor()
	// account.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	account.DefaultDeletedAt = accountDescDeletedAt.Default.(func() uint32)
	// accountDescCoinTypeID is the schema descriptor for coin_type_id field.
	accountDescCoinTypeID := accountFields[1].Descriptor()
	// account.DefaultCoinTypeID holds the default value on creation for the coin_type_id field.
	account.DefaultCoinTypeID = accountDescCoinTypeID.Default.(func() uuid.UUID)
	// accountDescAddress is the schema descriptor for address field.
	accountDescAddress := accountFields[2].Descriptor()
	// account.DefaultAddress holds the default value on creation for the address field.
	account.DefaultAddress = accountDescAddress.Default.(string)
	// accountDescUsedFor is the schema descriptor for used_for field.
	accountDescUsedFor := accountFields[3].Descriptor()
	// account.DefaultUsedFor holds the default value on creation for the used_for field.
	account.DefaultUsedFor = accountDescUsedFor.Default.(string)
	// accountDescPlatformHoldPrivateKey is the schema descriptor for platform_hold_private_key field.
	accountDescPlatformHoldPrivateKey := accountFields[4].Descriptor()
	// account.DefaultPlatformHoldPrivateKey holds the default value on creation for the platform_hold_private_key field.
	account.DefaultPlatformHoldPrivateKey = accountDescPlatformHoldPrivateKey.Default.(bool)
	// accountDescActive is the schema descriptor for active field.
	accountDescActive := accountFields[5].Descriptor()
	// account.DefaultActive holds the default value on creation for the active field.
	account.DefaultActive = accountDescActive.Default.(bool)
	// accountDescLocked is the schema descriptor for locked field.
	accountDescLocked := accountFields[6].Descriptor()
	// account.DefaultLocked holds the default value on creation for the locked field.
	account.DefaultLocked = accountDescLocked.Default.(bool)
	// accountDescBlocked is the schema descriptor for blocked field.
	accountDescBlocked := accountFields[7].Descriptor()
	// account.DefaultBlocked holds the default value on creation for the blocked field.
	account.DefaultBlocked = accountDescBlocked.Default.(bool)
	// accountDescID is the schema descriptor for id field.
	accountDescID := accountFields[0].Descriptor()
	// account.DefaultID holds the default value on creation for the id field.
	account.DefaultID = accountDescID.Default.(func() uuid.UUID)
	goodbenefitMixin := schema.GoodBenefit{}.Mixin()
	goodbenefit.Policy = privacy.NewPolicies(goodbenefitMixin[0], schema.GoodBenefit{})
	goodbenefit.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := goodbenefit.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	goodbenefitMixinFields0 := goodbenefitMixin[0].Fields()
	_ = goodbenefitMixinFields0
	goodbenefitFields := schema.GoodBenefit{}.Fields()
	_ = goodbenefitFields
	// goodbenefitDescCreatedAt is the schema descriptor for created_at field.
	goodbenefitDescCreatedAt := goodbenefitMixinFields0[0].Descriptor()
	// goodbenefit.DefaultCreatedAt holds the default value on creation for the created_at field.
	goodbenefit.DefaultCreatedAt = goodbenefitDescCreatedAt.Default.(func() uint32)
	// goodbenefitDescUpdatedAt is the schema descriptor for updated_at field.
	goodbenefitDescUpdatedAt := goodbenefitMixinFields0[1].Descriptor()
	// goodbenefit.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	goodbenefit.DefaultUpdatedAt = goodbenefitDescUpdatedAt.Default.(func() uint32)
	// goodbenefit.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	goodbenefit.UpdateDefaultUpdatedAt = goodbenefitDescUpdatedAt.UpdateDefault.(func() uint32)
	// goodbenefitDescDeletedAt is the schema descriptor for deleted_at field.
	goodbenefitDescDeletedAt := goodbenefitMixinFields0[2].Descriptor()
	// goodbenefit.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	goodbenefit.DefaultDeletedAt = goodbenefitDescDeletedAt.Default.(func() uint32)
	// goodbenefitDescGoodID is the schema descriptor for good_id field.
	goodbenefitDescGoodID := goodbenefitFields[1].Descriptor()
	// goodbenefit.DefaultGoodID holds the default value on creation for the good_id field.
	goodbenefit.DefaultGoodID = goodbenefitDescGoodID.Default.(func() uuid.UUID)
	// goodbenefitDescAccountID is the schema descriptor for account_id field.
	goodbenefitDescAccountID := goodbenefitFields[2].Descriptor()
	// goodbenefit.DefaultAccountID holds the default value on creation for the account_id field.
	goodbenefit.DefaultAccountID = goodbenefitDescAccountID.Default.(func() uuid.UUID)
	// goodbenefitDescBackup is the schema descriptor for backup field.
	goodbenefitDescBackup := goodbenefitFields[3].Descriptor()
	// goodbenefit.DefaultBackup holds the default value on creation for the backup field.
	goodbenefit.DefaultBackup = goodbenefitDescBackup.Default.(bool)
	// goodbenefitDescID is the schema descriptor for id field.
	goodbenefitDescID := goodbenefitFields[0].Descriptor()
	// goodbenefit.DefaultID holds the default value on creation for the id field.
	goodbenefit.DefaultID = goodbenefitDescID.Default.(func() uuid.UUID)
}

const (
	Version = "v0.10.1"                                         // Version of ent codegen.
	Sum     = "h1:dM5h4Zk6yHGIgw4dCqVzGw3nWgpGYJiV4/kyHEF6PFo=" // Sum of ent codegen.
)
